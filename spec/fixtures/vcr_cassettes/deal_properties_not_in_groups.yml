---
http_interactions:
- request:
    method: get
    uri: https://api.hubapi.com/deals/v1/properties
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <ACCESS_TOKEN>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 08 Aug 2022 14:51:12 GMT
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7379119b2afb3a6f-CDG
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Access-Control-Allow-Credentials:
      - 'false'
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      X-Hubspot-Correlation-Id:
      - ee1ef29d-7e30-47d6-ba18-6533d1675442
      X-Hubspot-Ratelimit-Daily:
      - '250000'
      X-Hubspot-Ratelimit-Daily-Remaining:
      - '248309'
      X-Hubspot-Ratelimit-Interval-Milliseconds:
      - '10000'
      X-Hubspot-Ratelimit-Max:
      - '100'
      X-Hubspot-Ratelimit-Remaining:
      - '82'
      X-Hubspot-Ratelimit-Secondly:
      - '10'
      X-Hubspot-Ratelimit-Secondly-Remaining:
      - '8'
      X-Trace:
      - 2BA8F196175061EB4FBE9DCD94070FDF5E9048907E000000000000000000
      Report-To:
      - '{"endpoints":[{"url":"https:\/\/a.nel.cloudflare.com\/report\/v3?s=VAvucBdApbJmeF8GDBQGV6%2FX%2FDVIlcFJCZMvKwMLPOc3l%2Bqh7xw6WH%2Fs51jm0fwAGEBHGwO%2B7mF%2BkFUG49lRvY8qxEN5ADASl%2By0r3dPJvcoYBuqoGQsaQxsQkp8KhbhFK1abaM%2B16i6JSoG"}],"group":"cf-nel","max_age":604800}'
      Nel:
      - '{"success_fraction":0.01,"report_to":"cf-nel","max_age":604800}'
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 08 Aug 2022 14:51:12 GMT
recorded_with: VCR 6.0.0
